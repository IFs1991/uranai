src:
  structure.yaml:
    content: |-
      ライフサイクル・ポテンシャル占術サービス - モバイルファースト縦型LP版

      主要機能:
      - 西洋占星術と四柱推命を統合したAI占いサービス
      - 無料基本占いと特定質問への回答提供
      - 有料プラン（2,000円）による詳細鑑定PDFと365日占い
      - サーバーレスアーキテクチャによる高速・軽量な実装
      - モバイルファーストで速度重視の設計哲学

      技術スタック:
      - フロントエンド: 純粋なHTML/CSS/JavaScript（フレームワークなし）
      - バックエンド: Vercel Functions / Node.js
      - 外部API: Google Gemini API（占い生成）、pay.jp API（決済処理）
      - PDF生成: PDFKit（Node.js）

      パフォーマンス最適化:
      - 総初期ロードサイズ300KB以下
      - 重要CSSのインライン化
      - システムフォントのみ使用
      - SVGとCSSによる視覚要素（画像リソース最小化）
      - JavaScript遅延読み込み
      - APIリクエストの並列処理と結果キャッシュ
    agent選定理由: "claude-3-5-sonnetは洗練された構造設計と詳細な実装計画が必要なプロジェクトに適しています。特に、複数の技術要素（フロントエンド、バックエンド、API連携）を統合した全体像を把握し、効率的なアーキテクチャを設計する能力に優れています。"
    api選定理由: "このプロジェクトでは外部APIとして主にGoogle Gemini APIとpay.jp APIを使用するため、これらとの連携設計が必要ですが、構造設計自体にはAPI特定のエンドポイントは必要ありません。"
    dependency: []
    agent: "claude-3-7-sonnet-20250219" # Updated
    api: []

  index.html:
    content: |-
      ライフサイクル・ポテンシャル占術のメインページ

      構成:
      - <head>セクション
        * メタタグ（viewport, description等）
        * タイトル設定
        * インラインCSS（初期表示に必須のスタイル）
        * preload/preconnectによる重要リソースの先読み

      - <body>セクション
        * ヘッダー部分（タイトル、サブタイトル、神秘的宇宙背景）
        * 占術説明部分（西洋占星術と四柱推命の融合について）
        * 入力フォーム（名前、生年月日時、出生地、特定質問）
        * 無料占い実行ボタン
        * 結果表示領域（初期非表示）
        * 有料プラン紹介・購入セクション
        * フッター（利用規約、プライバシーポリシー、コピーライト）

      最適化ポイント:
      - インラインCSSによる初期表示の高速化
      - 最小限のHTMLで基本構造を設計
      - 非同期読み込みによるJavaScriptファイルの遅延ロード
      - システムフォントスタックの使用
    dependency:
      - src/styles/main.css
      - src/js/app.js
      - src/js/horoscope.js
      - src/js/payment.js
    agent: "claude-3-7-sonnet-20250219" # Updated
    api: []

  styles:
    main.css:
      content: |-
        メインスタイルシート

        カラーパレット:
        - メインカラー: #483D8B (ダークスレートブルー - 宇宙・神秘的なイメージ)
        - セカンダリカラー: #FFD700 (ゴールド - 星のアクセント)
        - ターシャリーカラー: #9370DB (ミディアムパープル - 東洋的要素)
        - 背景色: #191970 (ミッドナイトブルー - 宇宙背景)
        - テキスト色: #F8F8FF (ほぼ白 - 暗い背景に読みやすく)
        - カード背景: rgba(25, 25, 112, 0.7) (半透明の濃紺)
        - ハイライト背景: rgba(255, 255, 255, 0.08) (特定質問結果用の強調背景)

        スタイル定義:
        - 基本レイアウト (コンテナ、マージン、パディング)
        - タイポグラフィ設定 (システムフォントスタック)
        - フォーム要素のスタイリング
        - カードUIデザイン (ホログラフィック効果)
        - 結果表示領域のスタイル
        - CSSアニメーション (星のきらめき、結果表示のフェードイン)
        - レスポンシブメディアクエリ (モバイルファースト)

        パフォーマンス配慮:
        - 重要度の低いスタイルは遅延読み込み
        - グラデーションや複雑な視覚効果は最小限に
        - CSSアニメーションは軽量に保つ
        - 装飾よりも読みやすさ優先
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    stars.css:
      content: |-
        星空背景とアニメーションのスタイル

        定義内容:
        - 星空背景のグラデーション (CSSのみで実装)
        - 星の点滅アニメーション
        - 流れ星エフェクト
        - 星座記号の装飾要素

        実装詳細:
        - 複数のCSSアニメーションで星のきらめきを表現
        - ::before, ::afterを活用した複数レイヤーの背景表現
        - CSSグラデーションとtransformで宇宙的な雰囲気を演出
        - カラースキームはメインカラーパレットと統一

        最適化ポイント:
        - 軽量なCSSアニメーションのみ使用
        - 画像リソースを使わずCSSのみで実装
        - will-changeプロパティで適切なレイヤー化
        - モバイルでは簡略化された効果を適用
      dependency:
        - src/styles/main.css
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

  js:
    app.js:
      content: |-
        メインアプリケーションJavaScript

        機能:
        - アプリケーション初期化
        - UIの相互作用管理
        - フォーム操作とバリデーション
        - ビューの切り替え（結果表示、決済モーダル等）
        - モバイル向け最適化（タッチイベント、スクロール制御）

        実装詳細:
        - モジュールパターンを使用した名前空間の分離
        - イベントリスナー（フォーム送信、ボタンクリック等）
        - クライアントサイドバリデーション
        - 遅延読み込みの制御（必要な時点でのスクリプト読み込み）
        - 状態管理（フォーム入力、API応答データなど）

        パフォーマンス最適化:
        - イベント委任によるリスナー最小化
        - データキャッシュによる不要なAPIコール回避
        - 遅延実行とスロットリング
        - IntersectionObserverによる非同期読み込み制御
      dependency:
        - src/js/horoscope.js
        - src/js/payment.js
        - src/js/utils.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    horoscope.js:
      content: |-
        占い機能を制御するJavaScript

        機能:
        - 占いフォームデータの収集と検証
        - Gemini APIへのリクエスト準備
        - バックエンドAPI連携処理
        - 占い結果の受信とDOM表示
        - ローディングアニメーション制御

        実装詳細:
        - フォームデータから西洋占星術・四柱推命計算用の入力準備
        - fetch API使用によるバックエンドエンドポイント呼び出し
        - 非同期処理（async/await）とエラーハンドリング
        - レスポンスデータのパースとDOM操作
        - 結果表示用HTMLテンプレート生成

        最適化ポイント:
        - APIリクエストの適切なキャッシュ
        - 必要最小限のデータ送受信
        - プログレッシブレンダリング（結果を受け取りながら表示）
        - エラー回復とリトライメカニズム
      dependency:
        - src/js/utils.js
        - src/api/generate-horoscope.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    payment.js:
      content: |-
        決済処理を制御するJavaScript

        機能:
        - pay.jpとの連携
        - クレジットカード決済フォーム表示・制御
        - トークン化と決済処理
        - 決済完了後のPDF生成リクエスト
        - エラーハンドリングとユーザーフィードバック

        実装詳細:
        - pay.jpのJavaScriptSDK遅延読み込み
        - カード情報のトークン化
        - 決済フォームUIの構築と表示
        - バックエンドへの決済リクエスト送信
        - 決済完了後のPDF生成プロセス開始

        最適化ポイント:
        - pay.jpのSDKは必要な時点で遅延読み込み
        - 決済処理中の適切なUI表示（ローディング、エラーなど）
        - 決済処理の状態管理と復元メカニズム
        - モバイル最適化（タッチフレンドリーなUI）
      dependency:
        - src/js/utils.js
        - src/api/process-payment.js
        - src/api/generate-pdf.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    utils.js:
      content: |-
        ユーティリティ関数ライブラリ

        機能:
        - 日付操作関数
        - フォームデータ処理
        - APIリクエスト共通処理
        - DOM操作ヘルパー
        - アニメーション制御
        - エラーハンドリング

        実装詳細:
        - 生年月日・時刻のフォーマット変換
        - 入力バリデーション関数
        - fetch APIラッパー（リトライ、タイムアウト処理）
        - 要素の表示/非表示、クラス操作などのDOM関数
        - デバウンス・スロットルの実装
        - エラーメッセージテンプレート

        最適化ポイント:
        - 純粋関数の実装（副作用の最小化）
        - メモ化によるパフォーマンス最適化
        - 最小限かつ汎用的なAPIの提供
        - エラー発生時の適切なフォールバック機能
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

  api:
    generate-horoscope.js:
      content: |-
        占い結果生成のサーバーレス関数

        機能:
        - クライアントからの占いリクエスト処理
        - Google Gemini APIとの連携
        - 西洋占星術と四柱推命の基本データ計算
        - 特定質問への回答生成
        - 結果整形と返却

        実装詳細:
        - Vercel Serverless Function / API Route
        - Google Gemini APIへのリクエスト構築
        - 生年月日時からの西洋占星術データ計算（太陽星座、月星座、アセンダント）
        - 生年月日時からの四柱推命データ計算（日主、命式の五行バランス）
        - 特定質問のプロンプト拡張処理

        最適化ポイント:
        - 計算ロジックの最適化（計算量削減）
        - Gemini APIプロンプトの最適化（トークン数削減）
        - 類似パターンのメモリキャッシュ
        - 並列リクエスト処理
        - エラーハンドリングとリトライロジック
      dependency:
        - src/lib/gemini-api.js
        - src/lib/astrology.js
        - src/lib/four-pillars.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: ["gemini-pro"]

    process-payment.js:
      content: |-
        決済処理のサーバーレス関数

        機能:
        - pay.jpトークンを使用した決済処理
        - 決済情報の検証
        - 決済完了後のPDF生成プロセス開始
        - クライアントへの決済結果返却

        実装詳細:
        - Vercel Serverless Function / API Route
        - pay.jp APIとの連携
        - クレジットカードトークンの検証と決済処理
        - 固定金額（2,000円）の課金処理
        - 決済完了ステータスの管理
        - PDF生成処理のトリガー

        最適化ポイント:
        - コールドスタート対策（依存関係の最小化）
        - エラーハンドリングの強化（決済の信頼性確保）
        - タイムアウト対策
        - 処理状態の適切な管理
      dependency:
        - src/lib/payjp-api.js
        - src/api/generate-pdf.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    generate-pdf.js:
      content: |-
        詳細鑑定PDF生成のサーバーレス関数

        機能:
        - 年間詳細鑑定PDFの生成
        - Gemini APIによる完全版鑑定文章の生成
        - 365日分の日別占い生成
        - PDFテンプレート適用と出力
        - クライアントへのダウンロード提供

        実装詳細:
        - Vercel Serverless Function（長時間実行用設定）
        - PDFKit使用によるPDF生成
        - 日別占いの月単位並列生成（12並列）
        - PDF構成（表紙、導入、3つのフレームワーク、特別質問回答、総括、365日カレンダー）
        - 視覚的な星座チャートと命式の生成

        最適化ポイント:
        - 月単位の並列処理による生成時間短縮
        - ストリーミング生成（生成しながら部分的送信）
        - 画像・フォントの最適化（埋め込みの最小化）
        - レイアウト単純化によるレンダリング高速化
        - メモリ使用量の最適化（大きなデータ分割処理）
      dependency:
        - src/lib/gemini-api.js
        - src/lib/astrology.js
        - src/lib/four-pillars.js
        - src/lib/pdf-generator.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: ["gemini-pro"]

  lib:
    gemini-api.js:
      content: |-
        Google Gemini API連携ライブラリ

        機能:
        - Gemini APIへのリクエスト作成・送信
        - プロンプトテンプレート管理
        - レスポンス解析
        - エラーハンドリングとリトライロジック

        実装詳細:
        - API認証と接続管理
        - 占い生成用プロンプトテンプレート
        - 365日占い生成の分割バッチ処理
        - レスポンスの構造化と整形
        - エラー発生時のバックオフ戦略

        最適化ポイント:
        - プロンプト最適化（トークン数削減）
        - 並列リクエスト制御（レート制限対応）
        - 類似リクエストのキャッシュ
        - エラー分離（単一失敗が全体に影響しない設計）
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: ["gemini-pro"]

    astrology.js:
      content: |-
        西洋占星術計算ライブラリ

        機能:
        - 生年月日時と出生地から星座・惑星位置を計算
        - 太陽星座、月星座、アセンダント計算
        - ハウス配置、アスペクト計算
        - 占星術チャート生成のためのデータ準備

        実装詳細:
        - 天文学的計算アルゴリズム
        - 座標変換処理
        - 時差補正
        - 星座・惑星の解釈データ

        最適化ポイント:
        - 計算の正確性と効率性のバランス
        - メモリ使用量の最適化
        - 計算結果のキャッシュ
        - 必要な計算のみを実行（不要な惑星計算をスキップ）
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    four-pillars.js:
      content: |-
        四柱推命計算ライブラリ

        機能:
        - 生年月日時から四柱推命の命式を生成
        - 日主、五行バランスの計算
        - 通変星の判定
        - 大運・年運の算出

        実装詳細:
        - 干支変換アルゴリズム
        - 十干・十二支の組み合わせ処理
        - 蔵干の計算
        - 五行の相生相剋関係計算
        - 通変星システムの実装

        最適化ポイント:
        - ルックアップテーブルの活用による計算量削減
        - メモリ使用量の最適化
        - 計算結果のキャッシュ
        - 必要な計算のみを実行
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    pdf-generator.js:
      content: |-
        PDF生成管理ライブラリ

        機能:
        - PDFKit使用による詳細鑑定PDF生成
        - テンプレート管理と適用
        - 西洋占星術チャートと四柱推命命式の視覚化
        - 365日占いカレンダーレイアウト

        実装詳細:
        - PDF生成ワークフロー
        - テキストレイアウトと書式設定
        - SVGチャート生成（星座、命式）
        - ページ構成と目次
        - フォント管理

        最適化ポイント:
        - ストリーミング生成でメモリ使用を最適化
        - 画像・グラフィックの最小化
        - フォント埋め込みの制限（標準フォントのみ使用）
        - 段階的レンダリング
        - 月別セクションの並列生成
      dependency:
        - src/lib/astrology.js
        - src/lib/four-pillars.js
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    payjp-api.js:
      content: |-
        pay.jp API連携ライブラリ

        機能:
        - pay.jp決済処理API連携
        - トークン検証
        - 支払い処理
        - 決済結果確認

        実装詳細:
        - APIクライアント
        - 認証管理
        - リクエスト構築
        - レスポンス処理
        - エラーハンドリング

        最適化ポイント:
        - 軽量な実装（最小限の依存関係）
        - エラー時のリトライ処理
        - タイムアウト管理
        - ステータスの永続化なし（セッションのみの一時管理）
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

  assets:
    svg:
      content: |-
        SVGアセット管理ディレクトリ

        コンテンツ:
        - 星座記号セット（12星座の各シンボル）
        - 干支アイコンセット（12支の各シンボル）
        - 装飾要素（星、月、太陽など）
        - 背景パターン（星座線、星雲など）
        - UI要素（ボタン、フレーム、区切り線など）

        実装詳細:
        - 最適化されたSVGファイル（viewBox設定済み）
        - アイコンスプライトとして結合
        - インライン使用可能な形式
        - 色をCSS変数で制御可能な設計

        最適化ポイント:
        - SVGの最適化（不要なパスの削除）
        - 一貫性のあるアートスタイル
        - 小サイズファイル（各2KB以下を目標）
        - シンプルな形状の優先（複雑なパスの回避）
      dependency: []
      agent: "claude-3-7-sonnet-20250219" # Updated
      api: []

    templates:
      pdf-template.html:
        content: |-
          PDF生成用HTMLテンプレート

          構成:
          - 表紙デザイン（タイトル、ユーザー名、生年月日時、出生地）
          - 導入ページ（この鑑定書の読み方、占術の説明）
          - 3つのフレームワークセクション
            * I. 核となるエネルギーと個性
            * II. 才能と人生のテーマ
            * III. 運気の流れと成長のタイミング
          - 特別質問への詳細回答セクション（入力があった場合）
          - アドバイスと総括セクション
          - 365日占いカレンダーセクション（月別レイアウト）

          デザイン要素:
          - 宇宙・星をテーマにした背景
          - 色彩はメインカラーパレットに準拠
          - 西洋占星術のホロスコープチャートと四柱推命の命式の視覚表現
          - 月別カレンダーレイアウト

          最適化ポイント:
          - シンプルなレイアウト（複雑なグラフィックを避ける）
          - テキスト中心の設計
          - 標準フォント使用
          - 画像の最小使用
        dependency: []
        agent: "claude-3-7-sonnet-20250219" # Updated
        api: []