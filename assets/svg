import React from 'react';

const SVGAssets: React.FC = () => {
  return (
    <Card className="w-full bg-card">
      <CardHeader className="bg-card">
        <CardTitle className="bg-card">SVGアセットライブラリ</CardTitle>
        <CardDescription className="bg-card">最適化されたSVGアイコンとパターンのコレクション</CardDescription>
      </CardHeader>
      <CardContent className="bg-card">
        <div className="space-y-8">
          {/* 星座記号セクション */}
          <div>
            <h3 className="text-lg font-medium mb-4">星座記号</h3>
            <div className="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 gap-4">
              {zodiacSigns.map((sign) => (
                <div key={sign.name} className="flex flex-col items-center">
                  <div className="w-12 h-12 flex items-center justify-center bg-[#191970] bg-opacity-20 rounded-full p-2 mb-2">
                    <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" strokeWidth="2" className="text-[#483D8B]">
                      <path d={sign.path} />
                    </svg>
                  </div>
                  <span className="text-xs text-center">{sign.name}</span>
                </div>
              ))}
            </div>
          </div>

          {/* 干支アイコンセクション */}
          <div>
            <h3 className="text-lg font-medium mb-4">干支アイコン</h3>
            <div className="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 gap-4">
              {chineseZodiac.map((animal) => (
                <div key={animal.name} className="flex flex-col items-center">
                  <div className="w-12 h-12 flex items-center justify-center bg-[#9370DB] bg-opacity-20 rounded-full p-2 mb-2">
                    <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" strokeWidth="2" className="text-[#9370DB]">
                      <path d={animal.path} />
                    </svg>
                  </div>
                  <span className="text-xs text-center">{animal.name}</span>
                </div>
              ))}
            </div>
          </div>

          {/* 装飾要素セクション */}
          <div>
            <h3 className="text-lg font-medium mb-4">装飾要素</h3>
            <div className="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 gap-4">
              {decorativeElements.map((element) => (
                <div key={element.name} className="flex flex-col items-center">
                  <div className="w-12 h-12 flex items-center justify-center bg-[#FFD700] bg-opacity-20 rounded-full p-2 mb-2">
                    <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" strokeWidth="2" className="text-[#FFD700]">
                      <path d={element.path} />
                    </svg>
                  </div>
                  <span className="text-xs text-center">{element.name}</span>
                </div>
              ))}
            </div>
          </div>

          {/* 背景パターンセクション */}
          <div>
            <h3 className="text-lg font-medium mb-4">背景パターン</h3>
            <div className="grid grid-cols-2 gap-4">
              {backgrounds.map((bg) => (
                <div key={bg.name} className="border border-[#483D8B] border-opacity-30 rounded-md p-4">
                  <div className="h-32 w-full bg-[#191970] bg-opacity-10 rounded-md overflow-hidden mb-2">
                    <svg viewBox="0 0 100 100" width="100%" height="100%" className="text-[#483D8B] opacity-30">
                      <path d={bg.path} />
                    </svg>
                  </div>
                  <span className="text-sm">{bg.name}</span>
                </div>
              ))}
            </div>
          </div>

          {/* UI要素セクション */}
          <div>
            <h3 className="text-lg font-medium mb-4">UI要素</h3>
            <div className="grid grid-cols-3 gap-4">
              {uiElements.map((element) => (
                <div key={element.name} className="flex flex-col items-center">
                  <div className="w-full h-16 flex items-center justify-center bg-[#191970] bg-opacity-10 rounded-md p-2 mb-2">
                    <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" strokeWidth="2" className="text-[#483D8B]">
                      <path d={element.path} />
                    </svg>
                  </div>
                  <span className="text-xs text-center">{element.name}</span>
                </div>
              ))}
            </div>
          </div>

          {/* 色制御のデモ */}
          <div>
            <h3 className="text-lg font-medium mb-4">CSS変数による色制御</h3>
            <div className="p-4 bg-[#191970] bg-opacity-10 rounded-md">
              <div className="flex flex-wrap gap-4 justify-center">
                {colorVariants.map((color) => (
                  <div 
                    key={color.name} 
                    className="flex flex-col items-center"
                    style={{ '--icon-color': color.value } as React.CSSProperties}
                  >
                    <div className="w-12 h-12 flex items-center justify-center rounded-full p-2 mb-2">
                      <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke={color.value} strokeWidth="2">
                        <path d={zodiacSigns[0].path} />
                      </svg>
                    </div>
                    <span className="text-xs text-center">{color.name}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

// 星座記号データ
const zodiacSigns = [
  { name: '牡羊座', path: 'M12,2 L12,22 M4,8 C8,4 16,4 20,8' },
  { name: '牡牛座', path: 'M5,12 A7,7 0 0,1 19,12 M12,19 L12,12' },
  { name: '双子座', path: 'M4,4 C8,8 8,16 4,20 M20,4 C16,8 16,16 20,20 M8,12 L16,12' },
  { name: '蟹座', path: 'M5,7 A7,7 0 0,1 19,7 M5,17 A7,7 0 0,0 19,17' },
  { name: '獅子座', path: 'M6,12 A6,6 0 1,1 18,12 M12,18 L12,22' },
  { name: '乙女座', path: 'M8,4 L8,20 M16,4 L16,20 M8,12 L16,12' },
  { name: '天秤座', path: 'M4,12 L20,12 M12,12 L12,22 M6,7 A6,5 0 0,1 18,7' },
  { name: '蠍座', path: 'M4,12 A8,8 0 0,1 20,12 M20,12 L16,18 L20,20' },
  { name: '射手座', path: 'M4,20 L12,4 L20,20 M8,14 L16,14' },
  { name: '山羊座', path: 'M6,16 A6,6 0 0,1 18,16 A6,6 0 0,0 12,4' },
  { name: '水瓶座', path: 'M4,6 C12,12 16,12 20,6 M4,18 C12,12 16,12 20,18' },
  { name: '魚座', path: 'M4,7 C10,14 14,14 20,7 M4,17 C10,10 14,10 20,17 M12,4 L12,20' }
];

// 干支アイコンデータ
const chineseZodiac = [
  { name: '子（ねずみ）', path: 'M8,8 A4,4 0 1,1 16,8 A4,4 0 1,1 8,8 M16,8 L20,4 M8,8 L4,4' },
  { name: '丑（うし）', path: 'M6,12 A6,9 0 0,1 18,12 M7,7 L4,4 M17,7 L20,4' },
  { name: '寅（とら）', path: 'M4,12 A8,8 0 0,1 20,12 M6,6 L10,10 M14,10 L18,6' },
  { name: '卯（うさぎ）', path: 'M8,16 A4,8 0 0,1 16,16 M7,5 A3,4 0 0,1 12,5 A3,4 0 0,1 17,5' },
  { name: '辰（たつ）', path: 'M4,12 Q12,4 20,12 Q12,20 4,12 M12,4 L12,20' },
  { name: '巳（へび）', path: 'M4,16 Q12,8 20,16 M12,16 L12,8 A4,4 0 0,1 16,4' },
  { name: '午（うま）', path: 'M8,20 L8,8 A4,4 0 0,1 16,8 L16,20' },
  { name: '未（ひつじ）', path: 'M6,16 A6,6 0 0,1 18,16 M6,10 A6,6 0 0,1 18,10' },
  { name: '申（さる）', path: 'M8,8 A4,4 0 1,1 16,8 A4,4 0 1,1 8,8 M12,12 L12,20' },
  { name: '酉（とり）', path: 'M8,12 A4,8 0 0,1 16,12 M14,6 L20,4 M12,12 L12,20' },
  { name: '戌（いぬ）', path: 'M6,16 A6,6 0 0,1 18,16 M8,8 L12,4 L16,8' },
  { name: '亥（いのしし）', path: 'M6,12 A6,6 0 0,1 18,12 M6,8 L10,4 M18,8 L14,4' }
];

// 装飾要素データ
const decorativeElements = [
  { name: '星', path: 'M12,2 L14,9 L21,9 L16,14 L18,21 L12,17 L6,21 L8,14 L3,9 L10,9 Z' },
  { name: '月', path: 'M12,2 A10,10 0 0,1 12,22 A10,10 0 0,0 12,2' },
  { name: '太陽', path: 'M12,4 L12,2 M12,22 L12,20 M4,12 L2,12 M22,12 L20,12 M6,6 L4,4 M18,18 L20,20 M6,18 L4,20 M18,6 L20,4 M12,12 m-5,0 a5,5 0 1,0 10,0 a5,5 0 1,0 -10,0' },
  { name: '星雲', path: 'M4,12 C6,6 18,6 20,12 C18,18 6,18 4,12 Z' },
  { name: '流星', path: 'M20,4 L4,20 M20,4 L18,12 M20,4 L12,6' },
  { name: '銀河', path: 'M2,12 C8,6 16,18 22,12' }
];

// 背景パターンデータ
const backgrounds = [
  { name: '星座線', path: 'M10,10 L30,30 M40,20 L60,40 M70,10 L90,30 M20,80 L40,60 M60,90 L80,70 M10,50 L30,70 M80,40 L90,50' },
  { name: '星雲模様', path: 'M10,50 C30,20 70,80 90,50 C70,20 30,80 10,50 Z' },
  { name: '宇宙粒子', path: 'M10,10 L11,11 M20,20 L21,21 M30,30 L31,31 M40,40 L41,41 M50,50 L51,51 M60,60 L61,61 M70,70 L71,71 M80,80 L81,81 M90,90 L91,91 M15,45 L16,46 M25,75 L26,76 M35,15 L36,16 M55,85 L56,86 M65,35 L66,36 M85,65 L86,66' },
  { name: '星座図', path: 'M20,20 L40,30 L60,20 L80,30 M40,30 L30,50 M60,20 L70,50 M20,70 L40,60 L60,70 L80,60 M40,60 L30,50 M60,70 L70,50' }
];

// UI要素データ
const uiElements = [
  { name: '神秘的ボタン', path: 'M4,12 H20 M12,4 V20 M4,4 L20,20 M20,4 L4,20' },
  { name: '装飾フレーム', path: 'M4,4 L8,4 L4,8 M20,4 L16,4 L20,8 M4,20 L8,20 L4,16 M20,20 L16,20 L20,16' },
  { name: '区切り線', path: 'M4,12 H20 M10,8 L14,16 M14,8 L10,16' },
  { name: '光のアイコン', path: 'M12,4 V2 M12,22 V20 M4,12 H2 M22,12 H20 M6,6 L4,4 M18,18 L20,20 M6,18 L4,20 M18,6 L20,4 M12,12 m-4,0 a4,4 0 1,0 8,0 a4,4 0 1,0 -8,0' },
  { name: '星座ポイント', path: 'M12,12 m-4,0 a4,4 0 1,0 8,0 a4,4 0 1,0 -8,0 M12,3 V8 M12,16 V21 M3,12 H8 M16,12 H21' },
  { name: '占いカード', path: 'M4,4 H20 V20 H4 Z M8,8 H16 V16 H8 Z M12,4 V8 M12,16 V20 M4,12 H8 M16,12 H20' }
];

// 色制御のデモデータ
const colorVariants = [
  { name: 'メイン', value: '#483D8B' },
  { name: 'アクセント', value: '#FFD700' },
  { name: '東洋的', value: '#9370DB' },
  { name: '神秘的', value: '#191970' },
  { name: '惑星', value: '#4169E1' }
];

export default SVGAssets;